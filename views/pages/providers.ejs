<% layout("/layouts/boilerplate.ejs") %>
  <% function formatTimeSlot(startTime, endTime) { function formatTime(time) { const [hours, minutes]=time.split(':');
    const hour=parseInt(hours); const ampm=hour>= 12 ? 'PM' : 'AM';
    const formattedHour = hour % 12 || 12;
    return `${formattedHour}:${minutes} ${ampm}`;
    }
    return `${formatTime(startTime)} - ${formatTime(endTime)}`;
    }
    %>
    <div class="providers-page bg-light py-5">
      <div class="container py-md-3">
        <!-- Page Header with Bootstrap classes -->
        <header class="mb-5 text-center">
          <h1 class="fw-bold mb-4">
            <span class="text-primary">
              <%= category.name %>
            </span>
            <span class="text-muted mx-2">-</span>
            <span>Service Providers</span>
          </h1>

          <!-- Optional Breadcrumbs -->
          <nav aria-label="breadcrumb" class="d-none d-md-block">
            <ol class="breadcrumb justify-content-center">
              <li class="breadcrumb-item"><a href="/services">Services</a></li>
              <li class="breadcrumb-item"><a href="/services/<%= category._id %>">
                  <%= category.name %>
                </a></li>
              <li class="breadcrumb-item active" aria-current="page">Providers</li>
            </ol>
          </nav>
        </header>
     <div class="container mb-4">
  <div class="card border-0 shadow-sm p-3">
    <form action="/services/<%= serviceId %>/providers" method="get" class="row g-3 align-items-end" id="availability-filter">
      <div class="col-md-3">
        <label for="date" class="form-label text-muted">Date</label>
        <input type="date" class="form-control" id="date" name="date"
          value="<%= selectedDate || new Date().toISOString().split('T')[0] %>"
          min="<%= new Date().toISOString().split('T')[0] %>">
      </div>
      <div class="col-md-3">
        <label for="time" class="form-label text-muted">Time</label>
        <select class="form-select" id="time" name="time">
          <option value="" <%= !selectedTime ? 'selected' : '' %>>Any time</option>
          <% 
          const startHour = 7; // 7 AM
          const endHour = 21;  // 9 PM
          
          for (let hour = startHour; hour <= endHour; hour++) {
            for (let minute = 0; minute < 60; minute += 30) {
              if (hour === endHour && minute > 0) continue;
              
              const timeValue = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;
              const hour12 = hour % 12 || 12;
              const ampm = hour >= 12 ? 'PM' : 'AM';
              const timeDisplay = `${hour12}:${minute.toString().padStart(2, '0')} ${ampm}`;
              const isSelected = timeValue === selectedTime;
          %>
            <option value="<%= timeValue %>" <%= isSelected ? 'selected' : '' %>><%= timeDisplay %></option>
          <% }} %>
        </select>
      </div>
      <div class="col-md-4">
        <label for="location" class="form-label text-muted">Location</label>
        <div class="input-group">
          <input type="text" class="form-control" id="location" name="location" 
            placeholder="Enter area, city or pincode" value="<%= typeof location !== 'undefined' ? location : '' %>">
          <button type="button" class="btn btn-outline-secondary" id="use-my-location">
            <i class="fas fa-map-marker-alt"></i>
          </button>
          <input type="hidden" id="latitude" name="latitude" value="<%= typeof latitude !== 'undefined' ? latitude : '' %>">
          <input type="hidden" id="longitude" name="longitude" value="<%= typeof longitude !== 'undefined' ? longitude : '' %>">
        </div>
      </div>
      <div class="col-md-2">
        <div class="d-grid">
          <button type="submit" class="btn btn-primary">
            <i class="fas fa-filter me-2"></i>Find Providers
          </button>
        </div>
      </div>
      <% if (typeof location !== 'undefined' && location) { %>
        <div class="col-12 mt-2">
          <div class="d-flex align-items-center">
            <span class="badge bg-primary me-2"><i class="fas fa-map-marker-alt me-1"></i> <%= location %></span>
            <small class="text-muted">Showing providers near your location</small>
            
            <div class="ms-auto">
              <select name="distance" class="form-select form-select-sm" style="width: auto; display: inline-block">
                <option value="5" <%= distance == 5 ? 'selected' : '' %>>Within 5 km</option>
                <option value="10" <%= distance == 10 ? 'selected' : '' %>>Within 10 km</option>
                <option value="20" <%= distance == 20 ? 'selected' : '' %>>Within 20 km</option>
                <option value="50" <%= distance == 50 ? 'selected' : '' %>>Within 50 km</option>
              </select>
              <button type="submit" class="btn btn-sm btn-outline-primary">Update</button>
            </div>
          </div>
        </div>
      <% } %>
    </form>
  </div>
</div>

        <!-- Add this if no providers are available at all -->
        <% if (!providers || (providers.available.length===0 && providers.unavailable.length===0)) { %>
          <div class="text-center py-5">
            <div class="card border-0 shadow-sm mx-auto p-5" style="max-width: 500px;">
              <div class="py-4">
                <div class="empty-icon rounded-circle bg-light mx-auto mb-4">
                  <i class="fas fa-user-slash text-secondary"></i>
                </div>
                <h3 class="fw-bold mb-3">No Providers Available</h3>
                <p class="text-muted mb-4">
                  Sorry, there are currently no providers for this service in your area.
                </p>
                <a href="/services" class="btn btn-outline-primary rounded-3 px-4">
                  <i class="fas fa-arrow-left me-2"></i>Back to Services
                </a>
              </div>
            </div>
          </div>
          <% } else { %>

            <% if (providers.available.length===0 && providers.unavailable.length> 0 && (selectedDate || selectedTime))
              {
              %>
              <!-- Show message when filtered providers are all unavailable -->
              <div class="alert alert-info mb-4">
                <i class="fas fa-info-circle me-2"></i>
                No providers are available at the selected date and time. Below are providers who offer this service but
                aren't available for the requested slot.
              </div>
              <% } %>

                <!-- Provider Cards Grid -->
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                  <!-- First show available providers -->
                  <% providers.available.forEach(provider=> {
                    let matchedService = null;
                    provider.servicesOffered.forEach(offer => {
                    offer.services.forEach(s => {
                    if (s.service == serviceId) matchedService = s;
                    });
                    });
                    %>
                    <div class="col">
                      <div class="card provider-card h-100 border-0 shadow-sm rounded-4 overflow-hidden">
                        <!-- Provider Image -->
                        <div class="position-relative">
                          <div class="provider-image-wrapper">
                            <img
                              src="<%= provider.user.profileImage || 'https://cdn-icons-png.flaticon.com/512/4202/4202841.png' %>"
                              class="card-img-top" alt="<%= provider.user.name %>">
                          </div>

                          <!-- Provider Rating Badge -->
                          <div class="position-absolute top-0 end-0 m-3">
                            <div class="badge bg-warning text-dark rounded-pill fw-bold px-3 py-2">
                              <i class="fas fa-star me-1"></i> 4.8
                            </div>
                          </div>

                          <!-- Available badge -->
                          <div class="position-absolute top-0 start-0 m-3">
                            <div class="badge bg-success rounded-pill fw-bold px-3 py-2">
                              <i class="fas fa-check-circle me-1"></i> Available
                            </div>
                          </div>
                        </div>

                        <!-- Provider Info -->
                        <div class="card-body">
                          <h5 class="card-title text-center fw-bold mb-3">
                            <%= provider.user.name %>
                          </h5>

                          <!-- Provider details here -->
                          <div class="provider-details">
                            <!-- Same details as before -->
                            <div class="provider-detail d-flex align-items-center mb-2">
                              <div class="icon-wrapper bg-light rounded-circle me-3">
                                <i class="fas fa-briefcase text-primary"></i>
                              </div>
                              <div>
                                <small class="text-muted">Experience</small>
                                <div class="fw-medium">
                                  <%= matchedService && matchedService.experience ? matchedService.experience : "N/A" %>
                                </div>
                              </div>
                            </div>

                            <div class="provider-detail d-flex align-items-center mb-2">
                              <div class="icon-wrapper bg-light rounded-circle me-3">
                                <i class="fas fa-rupee-sign text-primary"></i>
                              </div>
                              <div>
                                <small class="text-muted">Service Price</small>
                                <div class="fw-medium">₹<%= matchedService && matchedService.customCost ?
                                    matchedService.customCost : "N/A" %>
                                </div>
                              </div>
                            </div>

                            <div class="provider-detail d-flex align-items-center mb-2">
                              <div class="icon-wrapper bg-light rounded-circle me-3">
                                <i class="fas fa-map-marker-alt text-primary"></i>
                              </div>
                              <div>
                                <small class="text-muted">Location</small>
                                <div class="fw-medium">
                                  <%= provider.address || "Not Available" %>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>

                        <!-- Book Now Button -->
                        <div class="card-footer border-0 bg-white pt-0 pb-4">
                          <form action="/services/<%= serviceId %>/<%= provider._id %>/book" method="get">
                            <input type="hidden" name="date" value="<%= selectedDate || '' %>">
                            <input type="hidden" name="time" value="<%= selectedTime || '' %>">
                            <button class="btn btn-primary btn-lg w-100 rounded-3 shadow-sm">
                              <i class="fas fa-calendar-check me-2"></i>Book Now
                            </button>
                          </form>
                        </div>
                      </div>
                    </div>
                    <% }); %>

                      <!-- Then show unavailable providers with greyed-out style -->
                      <% providers.unavailable.forEach(provider=> {
                        let matchedService = null;
                        provider.servicesOffered.forEach(offer => {
                        offer.services.forEach(s => {
                        if (s.service == serviceId) matchedService = s;
                        });
                        });
                        %>
                        <div class="col">
                          <div
                            class="card provider-card unavailable-provider h-100 border-0 shadow-sm rounded-4 overflow-hidden">
                            <!-- Provider Image - grayscale filter applied -->
                            <div class="position-relative">
                              <div class="provider-image-wrapper grayscale">
                                <img
                                  src="<%= provider.user.profileImage || 'https://cdn-icons-png.flaticon.com/512/4202/4202841.png' %>"
                                  class="card-img-top" alt="<%= provider.user.name %>">
                              </div>

                              <!-- Provider Rating Badge -->
                              <div class="position-absolute top-0 end-0 m-3">
                                <div class="badge bg-secondary text-white rounded-pill fw-bold px-3 py-2">
                                  <i class="fas fa-star me-1"></i> 4.8
                                </div>
                              </div>

                              <!-- Unavailable badge -->
                              <div class="position-absolute top-0 start-0 m-3">
                                <div class="badge bg-secondary rounded-pill fw-bold px-3 py-2">
                                  <i class="fas fa-clock me-1"></i> Unavailable
                                </div>
                              </div>
                            </div>

                            <!-- Provider Info - with muted colors -->
                            <div class="card-body">
                              <h5 class="card-title text-center fw-bold mb-3 text-muted">
                                <%= provider.user.name %>
                              </h5>

                              <!-- Unavailability reason -->
                              <% if (provider.unavailabilityReason) { %>
                                <div class="alert alert-secondary mb-3 small">
                                  <i class="fas fa-info-circle me-2"></i>
                                  <%= provider.unavailabilityReason %>
                                </div>
                                <% } %>
<% if (provider.availableTimeSlots && provider.availableTimeSlots.length > 0) { %>
  <div class="mb-3">
    <h6>Available times on <%= dayOfWeek %>:</h6>
    <div class="d-flex flex-wrap gap-2 mt-2">
      <% provider.availableTimeSlots.forEach(slot => { %>
        <span class="badge bg-light text-primary border">
          <%= formatTimeSlot(slot.startTime, slot.endTime) %>
        </span>
      <% }); %>
    </div>
  </div>
<% } %>
                                      <!-- Provider details here -->
                                      <div class="provider-details">
                                        <!-- Same details as before but with muted styling -->
                                        <div class="provider-detail d-flex align-items-center mb-2">
                                          <div class="icon-wrapper bg-light rounded-circle me-3">
                                            <i class="fas fa-briefcase text-secondary"></i>
                                          </div>
                                          <div>
                                            <small class="text-muted">Experience</small>
                                            <div class="fw-medium text-muted">
                                              <%= matchedService && matchedService.experience ?
                                                matchedService.experience : "N/A" %>
                                            </div>
                                          </div>
                                        </div>

                                        <div class="provider-detail d-flex align-items-center mb-2">
                                          <div class="icon-wrapper bg-light rounded-circle me-3">
                                            <i class="fas fa-rupee-sign text-secondary"></i>
                                          </div>
                                          <div>
                                            <small class="text-muted">Service Price</small>
                                            <div class="fw-medium text-muted">₹<%= matchedService &&
                                                matchedService.customCost ? matchedService.customCost : "N/A" %>
                                            </div>
                                          </div>
                                        </div>

                                        <div class="provider-detail d-flex align-items-center mb-2">
                                          <div class="icon-wrapper bg-light rounded-circle me-3">
                                            <i class="fas fa-map-marker-alt text-secondary"></i>
                                          </div>
                                          <div>
                                            <small class="text-muted">Location</small>
                                            <div class="fw-medium text-muted">
                                              <%= provider.address || "Not Available" %>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                            </div>
                            <!-- Corrected version with single footer -->
                            <!-- Action buttons -->
                            <div class="card-footer border-0 bg-white pt-0 pb-4 d-flex flex-column gap-2">
                              <!-- Show "Check Different Time" button to filter with one of provider's available slots -->
                              <% if (provider.availableTimeSlots && provider.availableTimeSlots.length> 0) { %>
                                <!-- Create a form for each available slot -->
                                <div class="dropdown w-100">
                                  <button class="btn btn-outline-primary btn-lg w-100 rounded-3 dropdown-toggle"
                                    type="button" id="availableTimesDropdown<%= provider._id %>"
                                    data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-calendar-day me-2"></i>Check Available Times
                                  </button>
                                  <ul class="dropdown-menu w-100"
                                    aria-labelledby="availableTimesDropdown<%= provider._id %>">
                                    <% provider.availableTimeSlots.forEach((slot, index)=> { %>
                                      <li>
                                        <form action="/services/<%= serviceId %>/providers" method="get"
                                          class="dropdown-item">
                                          <input type="hidden" name="date" value="<%= selectedDate %>">
                                          <input type="hidden" name="time" value="<%= slot.startTime %>">
                                          <button type="submit"
                                            class="btn btn-link text-decoration-none text-start w-100 px-0">
                                            <i class="fas fa-clock me-2"></i>
                                            <%= formatTimeSlot(slot.startTime, slot.endTime) %>
                                          </button>
                                        </form>
                                      </li>
                                      <% }); %>
                                  </ul>
                                </div>
                                <% } %>

                                  <!-- Contact Provider Button -->
                                  <button class="btn btn-outline-secondary btn-lg w-100 rounded-3 shadow-sm"
                                    data-bs-toggle="modal" data-bs-target="#contactProviderModal<%= provider._id %>">
                                    <i class="fas fa-envelope me-2"></i>Contact Provider
                                  </button>
                            </div>
                          </div>
                        </div>

                        <!-- Modal for contacting unavailable provider -->
                        <div class="modal fade" id="contactProviderModal<%= provider._id %>" tabindex="-1"
                          aria-hidden="true">
                          <div class="modal-dialog">
                            <div class="modal-content">
                              <div class="modal-header">
                                <h5 class="modal-title">Contact <%= provider.user.name %>
                                </h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                  aria-label="Close"></button>
                              </div>
                              <div class="modal-body">
                                <p>This provider is not available at your selected time. You can:</p>
                                <ul>
                                  <li>Try a different date or time</li>
                                  <li>Send a message to inquire about their availability</li>
                                </ul>
                                <form>
                                  <div class="mb-3">
                                    <label for="contactMessage<%= provider._id %>" class="form-label">Message</label>
                                    <textarea class="form-control" id="contactMessage<%= provider._id %>" rows="3"
                                      placeholder="I'm interested in your service. When would you be available?"></textarea>
                                  </div>
                                </form>
                              </div>
                              <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-primary">Send Message</button>
                              </div>
                            </div>
                          </div>
                        </div>
                        <% }); %>
                </div>
                <% } %>
      </div>
    </div>
    <style>
      /* Minimal custom styles to enhance Bootstrap */
      .providers-page {
        min-height: calc(100vh - 76px);
      }

      /* Container padding adjustment */
      .container {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
      }

      /* Page header spacing */
      header.mb-5 {
        margin-bottom: 2.5rem !important;
        padding: 0.5rem 0;
      }

      /* Provider card styling */
      .provider-card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        will-change: transform;
        margin-bottom: 0.75rem;
      }

      .provider-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1) !important;
      }

      /* Card body improved padding */
      .card-body {
        padding: 1.5rem 1.75rem;
      }

      /* Provider image styling */
      .provider-image-wrapper {
        height: 220px;
        overflow: hidden;
        position: relative;
      }

      .provider-image-wrapper::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 50%;
        background: linear-gradient(to top, rgba(0, 0, 0, 0.3), transparent);
        z-index: 1;
      }

      .provider-image-wrapper img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease-out;
      }

      .provider-card:hover .provider-image-wrapper img {
        transform: scale(1.05);
      }

      /* Provider details improved spacing */
      .provider-details {
        margin-top: 1rem;
      }

      .provider-detail {
        margin-bottom: 1.25rem !important;
        padding-left: 0.25rem;
      }

      .provider-detail:last-child {
        margin-bottom: 0.5rem !important;
      }

      /* Text inside provider details */
      .provider-detail small {
        margin-bottom: 0.25rem;
        display: block;
      }

      .provider-detail .fw-medium {
        padding-right: 0.25rem;
        line-height: 1.4;
        word-break: break-word;
      }

      /* Icon styling */
      .icon-wrapper {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        background-color: #f0f4ff !important;
        margin-right: 1rem !important;
      }

      /* Card title spacing */
      .card-title {
        margin-bottom: 1.25rem !important;
        padding: 0 0.5rem;
      }

      /* Card footer spacing */
      .card-footer {
        padding: 0.5rem 1.5rem 1.75rem !important;
      }

      /* Button spacing */
      .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        transition: all 0.3s ease;
        padding: 0.75rem 1.25rem;
        margin-top: 0.5rem;
      }

      .btn-primary:hover {
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        transform: translateY(-2px);
      }

      .btn-outline-primary {
        color: #667eea;
        border-color: #667eea;
        padding: 0.75rem 1.5rem;
      }

      .btn-outline-primary:hover {
        background-color: #667eea;
        border-color: #667eea;
      }

      /* Rating badge spacing */
      .badge {
        padding: 0.5rem 0.75rem !important;
        margin: 0.75rem !important;
      }

      /* Empty state icon and content */
      .empty-icon {
        width: 80px;
        height: 80px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        margin: 0 auto 1.5rem;
      }

      .empty-state-card {
        padding: 2.5rem !important;
      }

      .empty-state-card h3 {
        margin-bottom: 1rem !important;
      }

      .empty-state-card p {
        padding: 0 0.75rem;
        margin-bottom: 1.5rem !important;
      }

      /* Row spacing */
      .row {
        margin-left: -0.75rem;
        margin-right: -0.75rem;
      }

      .row>.col {
        padding-left: 0.75rem;
        padding-right: 0.75rem;
      }

      /* Unavailable provider styling */
      .unavailable-provider {
        opacity: 0.75;
        transition: opacity 0.3s ease-in-out;
      }

      .unavailable-provider:hover {
        opacity: 0.9;
      }

      /* Apply grayscale to unavailable provider images */
      .grayscale img {
        filter: grayscale(90%);
      }

      /* Disable hover transform for unavailable providers */
      .unavailable-provider:hover {
        transform: none;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
      }

      /* Make unavailable provider badges muted */
      .unavailable-provider .badge {
        background-color: #6c757d !important;
        color: white !important;
      }

      /* Make unavailable provider icons muted */
      .unavailable-provider .icon-wrapper i {
        color: #6c757d !important;
      }

      /* Time slots styling */
      .time-slots-container {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
      }

      .dropdown-item {
        display: block;
        padding: 8px 16px;
      }

      .dropdown-item:hover {
        background-color: #f8f9fa;
      }

      .dropdown-item .btn-link {
        padding: 0;
        text-align: left;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      .unavailable-provider:hover {
        opacity: 0.95;
        transform: translateY(-5px);
      }

      .grayscale img {
        filter: grayscale(80%);
        transition: filter 0.3s ease;
      }

      .unavailable-provider:hover .grayscale img {
        filter: grayscale(50%);
      }

      /* Responsive adjustments */
      @media (max-width: 768px) {
        .container {
          padding-left: 1.25rem;
          padding-right: 1.25rem;
        }

        .provider-image-wrapper {
          height: 180px;
        }

        .icon-wrapper {
          width: 36px;
          height: 36px;
          margin-right: 0.75rem !important;
        }

        .card-body {
          padding: 1.25rem;
        }

        .card-footer {
          padding: 0.25rem 1.25rem 1.5rem !important;
        }
      }

      @media (max-width: 576px) {
        .container {
          padding-left: 1rem;
          padding-right: 1rem;
        }

        .card-body {
          padding: 1.25rem 1rem;
        }

        .provider-detail {
          margin-bottom: 1rem !important;
        }

        h1.fw-bold {
          font-size: 1.75rem;
          padding: 0 0.5rem;
        }
      }
    </style>
   <!-- Add this JavaScript at the end of your providers.ejs file -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const dateInput = document.getElementById('date');
    const timeSelect = document.getElementById('time');
    
    // When date changes, update available time options
    dateInput.addEventListener('change', updateTimeOptions);
    
    // Initial update
    updateTimeOptions();
    
// Replace the current updateTimeOptions function with this improved version
function updateTimeOptions() {
  const selectedDate = dateInput.value;
  const now = new Date();
  const currentDate = now.toISOString().split('T')[0];
  const isToday = selectedDate === currentDate;
  
  // Get all time options
  const options = Array.from(timeSelect.options);
  
  // First, make all options visible
  options.forEach(option => {
    if (option.value) {
      option.disabled = false;
      option.style.display = '';
    }
  });
  
  // If it's today, hide past time slots
  if (isToday) {
    const currentHour = now.getHours();
    const currentMinute = now.getMinutes();
    
    // Calculate the current time in a comparable format
    const currentTimeValue = currentHour * 60 + currentMinute;
    
    // Show a debugging message
    console.log(`Current time: ${currentHour}:${currentMinute} (${currentTimeValue} minutes)`);
    
    let hasVisibleOptions = false;
    
    options.forEach(option => {
      if (option.value) {
        const [hours, minutes] = option.value.split(':').map(num => parseInt(num));
        const optionTimeValue = hours * 60 + minutes;
        
        // Hide if this time slot has passed (add 15 min buffer)
        if (optionTimeValue <= currentTimeValue + 15) {
          option.disabled = true;
          option.style.display = 'none';
          console.log(`Hiding option: ${option.text} (${optionTimeValue} minutes)`);
        } else {
          option.disabled = false;
          option.style.display = '';
          hasVisibleOptions = true;
          console.log(`Keeping option: ${option.text} (${optionTimeValue} minutes)`);
        }
      }
    });
    
    // Check if selected option is now disabled
    if (timeSelect.selectedIndex > 0 && timeSelect.options[timeSelect.selectedIndex].disabled) {
      // Find first enabled option
      const firstEnabled = options.findIndex(opt => !opt.disabled && opt.value);
      if (firstEnabled > 0) {
        timeSelect.selectedIndex = firstEnabled;
      } else {
        timeSelect.selectedIndex = 0; // Select placeholder if no times available
      }
    }
    
    // Calculate adjusted display times
    const firstAvailableTime = options.find(opt => !opt.disabled && opt.value);
    const displayStartTime = firstAvailableTime ? firstAvailableTime.text : '7:00 AM';
    
    document.querySelector('small.text-muted').textContent = 
      `Available today: From ${displayStartTime} to 9:00 PM`;
      
    if (!hasVisibleOptions) {
      // If no times are available today, inform the user
      document.querySelector('small.text-muted').textContent = 
        `No more slots available today. Please select another date.`;
    }
  } else {
    // For future dates, show all time slots
    document.querySelector('small.text-muted').textContent = 'Working hours: 7:00 AM - 9:00 PM';
  }
}
    
   
    function formatTime(hour, minute) {
      const ampm = hour >= 12 ? 'PM' : 'AM';
      const hour12 = hour % 12 || 12;
      return `${hour12}:${minute.toString().padStart(2, '0')} ${ampm}`;
    }
    
    // Also handle form submission to prevent selecting invalid times
    const form = document.getElementById('availability-filter');
    form.addEventListener('submit', function(e) {
      const selectedTime = timeSelect.value;
      if (selectedTime) {
        const [hours, minutes] = selectedTime.split(':').map(num => parseInt(num));
        
        // Validate working hours
        if (hours < 7 || hours >= 21) {
          e.preventDefault();
          alert('Please select a time between 7:00 AM and 9:00 PM');
          return false;
        }
        
        // Validate not in the past if today
        const selectedDate = dateInput.value;
        const now = new Date();
        const currentDate = now.toISOString().split('T')[0];
        
        if (selectedDate === currentDate) {
          const currentHour = now.getHours();
          const currentMinute = now.getMinutes();
          
          if (hours < currentHour || (hours === currentHour && minutes <= currentMinute)) {
            e.preventDefault();
            alert('Please select a future time');
            return false;
          }
        }
      }
    });
  });
</script><!-- Add this at the end of your providers.ejs file -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const useMyLocationBtn = document.getElementById('use-my-location');
    const locationInput = document.getElementById('location');
    const latitudeInput = document.getElementById('latitude');
    const longitudeInput = document.getElementById('longitude');
    
    useMyLocationBtn.addEventListener('click', function() {
      if (navigator.geolocation) {
        // Show loading state
        useMyLocationBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';
        useMyLocationBtn.disabled = true;
        
        navigator.geolocation.getCurrentPosition(
          function(position) {
            // Success
            const lat = position.coords.latitude;
            const lng = position.coords.longitude;
            
            // Set values to form
            latitudeInput.value = lat;
            longitudeInput.value = lng;
            
            // Reverse geocode to get address
            reverseGeocode(lat, lng);
          },
          function(error) {
            // Error
            useMyLocationBtn.innerHTML = '<i class="fas fa-map-marker-alt"></i>';
            useMyLocationBtn.disabled = false;
            
            let errorMessage = 'Unable to retrieve your location: ';
            switch(error.code) {
              case error.PERMISSION_DENIED:
                errorMessage += 'Location permission denied. Please enable location in your browser settings.';
                break;
              case error.POSITION_UNAVAILABLE:
                errorMessage += 'Location information is unavailable.';
                break;
              case error.TIMEOUT:
                errorMessage += 'The request to get location timed out.';
                break;
              default:
                errorMessage += 'An unknown error occurred.';
            }
            
            alert(errorMessage);
          }
        );
      } else {
        alert('Geolocation is not supported by this browser.');
      }
    });
    
    function reverseGeocode(lat, lng) {
      fetch(`/api/location/reverse-geocode?lat=${lat}&lng=${lng}`)
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            locationInput.value = data.address;
            // Submit form
            document.getElementById('availability-filter').submit();
          } else {
            useMyLocationBtn.innerHTML = '<i class="fas fa-map-marker-alt"></i>';
            useMyLocationBtn.disabled = false;
            alert('Unable to get your address. Please enter it manually.');
          }
        })
        .catch(error => {
          useMyLocationBtn.innerHTML = '<i class="fas fa-map-marker-alt"></i>';
          useMyLocationBtn.disabled = false;
          console.error('Error geocoding:', error);
          alert('Unable to get your address. Please enter it manually.');
        });
    }
  });
</script>