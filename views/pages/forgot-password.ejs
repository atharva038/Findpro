<% layout("/layouts/boilerplate.ejs") %>

    <div class="auth-page">
        <div class="auth-container">
            <div class="auth-card">
                <!-- Brand Logo -->
                <div class="auth-brand">
                    <img src="/img/logo.png" alt="KnockNFix" class="auth-logo">
                </div>

                <!-- Card Header -->
                <div class="auth-header">
                    <h2>Reset Your Password</h2>
                    <p class="text-muted">We'll help you get back into your account</p>
                </div>

                <!-- Forgot Password Form -->
                <div class="auth-body">
                    <!-- Alert for server-side messages -->
                    <% if(error && error.length> 0) { %>
                        <div class="alert alert-danger mb-4 animated fadeIn">
                            <div class="alert-content">
                                <i class="fas fa-exclamation-circle alert-icon"></i>
                                <div class="alert-message">
                                    <%= error %>
                                </div>
                            </div>
                        </div>
                        <% } %>
                            <% if(success && success.length> 0) { %>
                                <div class="alert alert-success mb-4 animated fadeIn">
                                    <div class="alert-content">
                                        <i class="fas fa-check-circle alert-icon"></i>
                                        <div class="alert-message">
                                            <%= success %>
                                        </div>
                                    </div>
                                </div>
                                <% } %>

                                    <!-- Client-side validation message area -->
                                    <div id="validationFeedback"
                                        class="alert alert-warning mb-4 d-none animated fadeIn">
                                        <div class="alert-content">
                                            <i class="fas fa-exclamation-triangle alert-icon"></i>
                                            <div class="alert-message" id="validationMessage"></div>
                                        </div>
                                    </div>

                                    <form action="/forgot-password" method="post" class="needs-validation"
                                        id="forgotPasswordForm" novalidate>
                                        <!-- Email Field -->
                                        <div class="form-group mb-4">
                                            <label for="email" class="form-label">Email Address</label>
                                            <div class="input-group">
                                                <span class="input-group-text">
                                                    <i class="fas fa-envelope"></i>
                                                </span>
                                                <input type="email" id="email" name="email" class="form-control"
                                                    placeholder="Enter your registered email" required
                                                    pattern="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
                                                    autocomplete="email" />
                                            </div>
                                            <div class="invalid-feedback">
                                                Please enter a valid email address.
                                            </div>
                                            <div class="form-hint">
                                                We'll send a password reset link to this email address
                                            </div>
                                        </div>

                                        <!-- Submit Button -->
                                        <div class="mb-4">
                                            <button type="submit" class="btn btn-primary btn-lg w-100" id="resetButton">
                                                <span class="button-icon"><i class="fas fa-paper-plane"></i></span>
                                                <span class="button-text">Send Reset Link</span>
                                                <span class="spinner-border spinner-border-sm ms-2 d-none" role="status"
                                                    id="resetSpinner"></span>
                                            </button>
                                        </div>

                                        <!-- Extra Info -->
                                        <div class="info-card">
                                            <div class="info-icon">
                                                <i class="fas fa-info-circle"></i>
                                            </div>
                                            <div class="info-content">
                                                <span class="info-title">Didn't receive an email?</span>
                                                <p class="info-text">Check your spam folder or contact support if you're
                                                    having trouble.</p>
                                            </div>
                                        </div>
                                    </form>
                </div>

                <!-- Card Footer -->
                <div class="auth-footer">
                    <p class="mb-0">Remember your password? <a href="/login" class="link-primary">Log in now</a></p>
                </div>
            </div>

            <!-- Additional Help -->
            <div class="auth-help">
                <a href="/contact" class="help-link">
                    <i class="fas fa-headset"></i>
                    <span>Need help?</span>
                </a>
            </div>
        </div>
    </div>

    <style>
        /* Enhanced Auth Page Styling */
        .auth-page {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem 1rem;
            background: linear-gradient(135deg, rgba(247, 248, 252, 0.9) 0%, rgba(237, 241, 255, 0.9) 100%);
            position: relative;
            overflow: hidden;
        }

        .auth-page::before {
            content: '';
            position: absolute;
            width: 200%;
            height: 200%;
            top: -50%;
            left: -50%;
            z-index: -1;
            background: radial-gradient(circle, rgba(240, 243, 252, 0.3) 5%, transparent 6%);
            background-size: 20px 20px;
            background-position: 0 0;
            animation: patternMove 30s linear infinite;
        }

        @keyframes patternMove {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .auth-container {
            width: 100%;
            max-width: 450px;
            position: relative;
            z-index: 1;
            margin: 0 auto;
            /* Ensure center alignment */
        }

        .auth-card {
            background-color: #ffffff;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            border-radius: 16px;
            overflow: hidden;
            transition: all 0.3s ease;
            position: relative;
            border: 1px solid rgba(86, 103, 253, 0.05);
            width: 100%;
            /* Ensure card takes full width of container */
        }

        .auth-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(86, 103, 253, 0.1);
        }

        .auth-brand {
            display: flex;
            justify-content: center;
            padding: 2rem 0 1rem;
        }

        .auth-logo {
            height: 60px;
            object-fit: contain;
        }

        .auth-header {
            text-align: center;
            padding: 0.5rem 2.5rem 1.5rem;
        }

        .auth-header h2 {
            font-weight: 600;
            color: #333;
            margin-bottom: 0.5rem;
            font-size: 1.75rem;
            background: linear-gradient(45deg, #4f46e5, #6366f1);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .auth-header p {
            color: #667085;
            font-size: 1rem;
            margin-bottom: 0;
        }

        .auth-body {
            padding: 1rem 2.5rem;
        }

        .auth-footer {
            padding: 1.5rem 2.5rem 2rem;
            text-align: center;
            border-top: 1px solid rgba(0, 0, 0, 0.05);
            background-color: #f9fafb;
            border-radius: 0 0 16px 16px;
        }

        .auth-footer a {
            font-weight: 600;
            text-decoration: none;
            transition: all 0.2s;
        }

        .auth-footer a:hover {
            text-decoration: underline;
        }

        .auth-help {
            margin-top: 1.5rem;
            text-align: center;
        }

        .help-link {
            display: inline-flex;
            align-items: center;
            color: #667085;
            text-decoration: none;
            font-size: 0.9rem;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            transition: all 0.2s ease;
            background-color: rgba(255, 255, 255, 0.7);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }

        .help-link:hover {
            color: #4f46e5;
            background-color: rgba(255, 255, 255, 1);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .help-link i {
            margin-right: 0.5rem;
            font-size: 1rem;
        }

        /* Form Elements */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #374151;
        }

        .input-group {
            display: flex;
            width: 100%;
            position: relative;
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
        }

        .input-group-text {
            background-color: white;
            border: 1px solid #e5e7eb;
            border-right: none;
            color: #6b7280;
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            border-top-left-radius: 0.5rem;
            border-bottom-left-radius: 0.5rem;
        }

        .form-control {
            flex: 1;
            min-width: 0;
            display: block;
            width: 100%;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: #374151;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #e5e7eb;
            border-left: none;
            border-radius: 0;
            border-top-right-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            height: auto;
            /* Fix for height issues */
            min-height: 48px;
        }

        .form-control:focus {
            border-color: #6366f1;
            box-shadow: 0 0 0 0.25rem rgba(99, 102, 241, 0.15);
            outline: 0;
        }

        .input-group:focus-within .input-group-text {
            border-color: #6366f1;
            color: #4f46e5;
        }

        .form-hint {
            margin-top: 0.5rem;
            font-size: 0.85rem;
            color: #6b7280;
        }

        /* Button Styling */
        .btn-primary {
            background: linear-gradient(45deg, #4f46e5, #6366f1);
            border: none;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            letter-spacing: 0.3px;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(99, 102, 241, 0.25);
        }

        .btn-primary:hover {
            background: linear-gradient(45deg, #4338ca, #4f46e5);
            box-shadow: 0 6px 15px rgba(99, 102, 241, 0.35);
            transform: translateY(-2px);
        }

        .btn-primary:focus {
            box-shadow: 0 0 0 0.25rem rgba(99, 102, 241, 0.4);
        }

        .btn-primary:active {
            transform: translateY(1px);
        }

        .button-icon {
            margin-right: 0.75rem;
            opacity: 0.8;
        }

        /* Alert Styling */
        .alert {
            border: none;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .alert-content {
            display: flex;
            align-items: flex-start;
        }

        .alert-icon {
            font-size: 1.25rem;
            margin-right: 0.75rem;
            margin-top: 0.125rem;
        }

        .alert-message {
            flex: 1;
        }

        .alert-danger {
            background-color: #fee2e2;
            color: #b91c1c;
        }

        .alert-success {
            background-color: #dcfce7;
            color: #15803d;
        }

        .alert-warning {
            background-color: #fef3c7;
            color: #92400e;
        }

        /* Info Card */
        .info-card {
            background-color: #f8fafc;
            border-radius: 10px;
            padding: 1rem;
            display: flex;
            align-items: flex-start;
            margin-top: 1.5rem;
            border: 1px dashed #e5e7eb;
        }

        .info-icon {
            color: #6366f1;
            font-size: 1.25rem;
            padding: 0.25rem 0.75rem 0 0;
        }

        .info-content {
            flex: 1;
        }

        .info-title {
            display: block;
            font-weight: 600;
            color: #334155;
            margin-bottom: 0.25rem;
        }

        .info-text {
            color: #64748b;
            margin: 0;
            font-size: 0.9rem;
            line-height: 1.5;
        }

        /* Animations */
        .animated {
            animation-duration: 0.3s;
            animation-fill-mode: both;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .fadeIn {
            animation-name: fadeIn;
        }

        /* Responsive adjustments */
        @media (max-width: 576px) {
            .auth-header {
                padding: 0.5rem 1.5rem 1rem;
            }

            .auth-body {
                padding: 1rem 1.5rem;
            }

            .auth-footer {
                padding: 1.5rem;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Form validation
            const form = document.querySelector('#forgotPasswordForm');
            const validationFeedback = document.getElementById('validationFeedback');
            const validationMessage = document.getElementById('validationMessage');
            const resetButton = document.getElementById('resetButton');
            const resetSpinner = document.getElementById('resetSpinner');
            const emailInput = document.getElementById('email');

            if (form) {
                form.addEventListener('submit', function (event) {
                    // Clear previous validation messages
                    hideValidationMessage();

                    // Check if form is valid
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();

                        // Find the first invalid field
                        const invalidField = form.querySelector(':invalid');
                        if (invalidField) {
                            invalidField.focus();

                            // Show validation message
                            showValidationMessage("Please enter a valid email address");
                        }

                        form.classList.add('was-validated');
                    } else {
                        // Form is valid, show loading state
                        resetButton.disabled = true;
                        resetButton.querySelector('.button-text').textContent = 'Sending...';
                        resetSpinner.classList.remove('d-none');

                        // Add a subtle button animation
                        resetButton.classList.add('btn-loading');
                    }
                });
            }

            // Email field validation
            if (emailInput) {
                emailInput.addEventListener('input', function () {
                    validateEmail(this);
                });

                emailInput.addEventListener('blur', function () {
                    validateEmail(this, true);
                });
            }

            // Validation function for email
            function validateEmail(field, showError = false) {
                const value = field.value.trim();
                const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

                if (value === '') {
                    // Empty field, don't show validation yet unless showError is true
                    if (showError) {
                        field.classList.add('is-invalid');
                        field.setCustomValidity('Please enter your email address');
                    } else {
                        field.classList.remove('is-invalid', 'is-valid');
                        field.setCustomValidity('');
                    }
                } else if (emailPattern.test(value)) {
                    field.classList.add('is-valid');
                    field.classList.remove('is-invalid');
                    field.setCustomValidity('');
                } else {
                    field.classList.add('is-invalid');
                    field.classList.remove('is-valid');
                    field.setCustomValidity('Please enter a valid email address');
                }
            }

            // Show validation message
            function showValidationMessage(message) {
                if (validationFeedback && validationMessage) {
                    validationMessage.textContent = message;
                    validationFeedback.classList.remove('d-none');

                    // Reset the animation to trigger it again
                    validationFeedback.style.animation = 'none';
                    validationFeedback.offsetHeight; // Trigger reflow
                    validationFeedback.style.animation = null;
                }
            }

            // Hide validation message
            function hideValidationMessage() {
                if (validationFeedback) {
                    validationFeedback.classList.add('d-none');
                }
            }

            // Focus on email field on page load for better UX
            if (emailInput && !emailInput.value) {
                setTimeout(() => {
                    emailInput.focus();
                }, 500);
            }
        });
    </script>