<% layout("/layouts/boilerplate.ejs") %>
  <link rel="stylesheet" href="/css/booking-fix.css">

  <div class="booking-page">
    <div class="container py-4">
      <div class="booking-progress mb-4">
        <div class="progress-step active">
          <div class="step-icon">1</div>
          <div class="step-text">Select Service</div>
        </div>
        <div class="progress-line"></div>
        <div class="progress-step active">
          <div class="step-icon">2</div>
          <div class="step-text">Book Service</div>
        </div>
        <div class="progress-line"></div>
        <div class="progress-step">
          <div class="step-icon">3</div>
          <div class="step-text">Confirm & Pay</div>
        </div>
      </div>

      <div class="card shadow-lg border-0 booking-card">
        <div class="card-header text-white py-4">
          <h2 class="text-center mb-0">
            <i class="fas fa-calendar-check me-2"></i>Book Your Service
          </h2>
        </div>

        <div class="card-body p-4">
          <!-- Service Overview -->
          <div class="service-overview mb-4">
            <div class="row align-items-center">
              <div class="col-md-2 text-center mb-3 mb-md-0">
                <img src="<%= service.img %>" alt="<%= service.name %>" class="service-img" />
              </div>
              <div class="col-md-7 mb-3 mb-md-0">
                <h3 class="service-name">
                  <%= service.name %>
                </h3>
                <p class="provider-name mb-2">
                  <i class="fas fa-user-circle me-2"></i>
                  <%= provider.user.name %>
                </p>
                <div class="service-details">
                  <span class="price">â‚¹<%= serviceDetails.customCost %></span>
                  <span class="duration">
                    <i class="far fa-clock me-1"></i>
                    <%= service.duration %> mins
                  </span>
                  <% if (serviceDetails.experience) { %>
                    <span class="experience">
                      <i class="fas fa-briefcase me-1"></i>
                      <%= serviceDetails.experience %>
                    </span>
                    <% } %>
                </div>
              </div>
              <div class="col-md-3 text-end">
                <div class="service-rating">
                  <i class="fas fa-star"></i> 4.8
                </div>
              </div>
            </div>
          </div>

          <!-- Booking Form -->
          <form action="/booking/confirm" method="post" id="bookingForm">
            <input type="hidden" name="serviceId" value="<%= service._id %>" />
            <input type="hidden" name="providerId" value="<%= provider._id %>" />

            <!-- Date & Time Section -->
            <div class="form-section">
              <div class="form-section-header">
                <span class="section-number">1</span> Choose Date & Time
              </div>
              <div class="form-section-body">
                <div class="mb-4">
                  <label class="form-label">
                    <i class="far fa-calendar-alt me-2"></i>Select Date and Time
                  </label>

                  <div class="date-time-container">
                    <div class="row g-2">
                      <div class="col-md-6">
                        <input type="date" id="date-picker" class="form-control"
                          min="<%= new Date().toISOString().split('T')[0] %>" required>
                      </div>
                      <div class="col-md-6">
                        <select id="time-picker" class="form-control" required>
                          <option value="" disabled selected>Select Time</option>
                          <option value="07:00">07:00 AM</option>
                          <option value="07:30">07:30 AM</option>
                          <option value="08:00">08:00 AM</option>
                          <option value="08:30">08:30 AM</option>
                          <option value="09:00">09:00 AM</option>
                          <option value="09:30">09:30 AM</option>
                          <option value="10:00">10:00 AM</option>
                          <option value="10:30">10:30 AM</option>
                          <option value="11:00">11:00 AM</option>
                          <option value="11:30">11:30 AM</option>
                          <option value="12:00">12:00 PM</option>
                          <option value="12:30">12:30 PM</option>
                          <option value="13:00">01:00 PM</option>
                          <option value="13:30">01:30 PM</option>
                          <option value="14:00">02:00 PM</option>
                          <option value="14:30">02:30 PM</option>
                          <option value="15:00">03:00 PM</option>
                          <option value="15:30">03:30 PM</option>
                          <option value="16:00">04:00 PM</option>
                          <option value="16:30">04:30 PM</option>
                          <option value="17:00">05:00 PM</option>
                          <option value="17:30">05:30 PM</option>
                          <option value="18:00">06:00 PM</option>
                          <option value="18:30">06:30 PM</option>
                          <option value="19:00">07:00 PM</option>
                          <option value="19:30">07:30 PM</option>
                          <option value="20:00">08:00 PM</option>
                          <option value="20:30">08:30 PM</option>
                          <option value="21:00">09:00 PM</option>
                      </div>
                    </div> <!-- Hidden input to store combined date/time for form submission -->
                    <input type="hidden" id="datetime-combined" name="date" required>
                  </div>

                  <p class="selected-datetime mt-2 mb-0 text-primary d-none">
                    <i class="fas fa-check-circle me-1"></i>
                    <span id="selected-date-display"></span>
                  </p>
                </div>
              </div>
            </div>

            <!-- Replace the address section with this -->
            <div class="form-section">
              <div class="form-section-header">
                <span class="section-number">2</span> Set Your Location
              </div>
              <div class="form-section-body">
                <% if (addresses && addresses.length> 0) { %>
                  <div class="mb-3">
                    <label class="form-label">
                      <i class="fas fa-map-marker-alt me-2"></i>Choose Your Address
                    </label>
                    <select class="form-select" id="address-select" name="addressId">
                      <option value="">Select an address...</option>
                      <% addresses.forEach((address, index)=> { %>
                        <option value="<%= index %>" <%=address.isDefault ? 'selected' : '' %>>
                          <%= address.label %>: <%= address.street %>, <%= address.city %>, <%= address.state %> - <%=
                                    address.pincode %>
                        </option>
                        <% }); %>
                          <option value="new">+ Add a new address</option>
                    </select>
                  </div>

                  <div id="new-address-section" class="mt-3 d-none">
                    <hr>
                    <h6>Enter New Address</h6>
                    <% } %>

                      <div id="map-section" class="<%= addresses && addresses.length > 0 ? 'd-none' : '' %>">
                        <div class="mb-3">
                          <label class="form-label">
                            <i class="fas fa-search me-2"></i>Search Location
                          </label>
                          <div class="input-group mb-2">
                            <input type="text" id="address-input" class="form-control"
                              placeholder="Search for your location..." />
                            <button type="button" class="btn btn-outline-primary" id="fetch-location-btn">
                              <i class="fas fa-location-arrow me-md-2"></i>
                              <span class="d-none d-md-inline">Current Location</span>
                            </button>
                          </div>
                          <div id="map"></div>
                        </div>
                      </div>

                      <div class="mt-3">
                        <label class="form-label">
                          <i class="fas fa-home me-2"></i>Detailed Address
                        </label>
                        <textarea id="detailed-address" name="detailedAddress" rows="2"
                          placeholder="Enter flat/house number, landmark, etc." required></textarea>
                      </div>

                      <% if (addresses && addresses.length> 0) { %>
                  </div> <!-- Close new-address-section -->
                  <% } %>
              </div>
            </div>
            <!-- Additional Info Section -->
            <div class="form-section">
              <div class="form-section-header">
                <span class="section-number">3</span> Additional Information
              </div>
              <div class="form-section-body">
                <div class="mb-3">
                  <label class="form-label">
                    <i class="fas fa-comment-alt me-2"></i>Special Instructions (Optional)
                  </label>
                  <textarea name="notes" class="form-control" rows="3"
                    placeholder="Any specific requirements or instructions for the service provider..."></textarea>
                </div>
              </div>
            </div>

            <!-- Booking Summary -->
            <div class="booking-summary">
              <div class="summary-item">
                <div class="summary-label">Service Cost</div>
                <div class="summary-value">â‚¹<%= serviceDetails.customCost %>
                </div>
              </div>
              <div class="summary-item">
                <div class="summary-label">Service Charge</div>
                <div class="summary-value">â‚¹50</div>
              </div>
              <div class="summary-item total">
                <div class="summary-label">Total Amount</div>
                <div class="summary-value">â‚¹<%= parseInt(serviceDetails.customCost) + 50 %>
                </div>
              </div>
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn btn-primary w-100 py-3">
              <i class="fas fa-check-circle me-2"></i>Confirm Booking
            </button>
          </form>
          <!-- Add this hidden element after your form at the bottom of the page -->
          <div id="addresses-data" class="hidden-data">
            <%= JSON.stringify(addresses || []) %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
  <!-- Error Display -->
  <div id="map-error" class="alert alert-danger d-none">
    Could not load Google Maps. Please refresh the page or try again later.
  </div>
  </div>

  <script src="/js/mapBooking.js"></script>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Get references to our date elements
      const datePicker = document.getElementById('date-picker');
      const timePicker = document.getElementById('time-picker');
      const combinedInput = document.getElementById('datetime-combined');
      const selectedDateDisplay = document.getElementById('selected-date-display');
      const selectedDateContainer = document.querySelector('.selected-datetime');

      // Format date for display
      function formatDisplayDate(date, time) {
        if (!date) return '';

        const dateObj = new Date(date);
        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
        const dateStr = dateObj.toLocaleDateString('en-US', options);

        return `${dateStr} at ${formatTime(time)}`;
      }

      // Format time from 24h to 12h format
      function formatTime(timeStr) {
        if (!timeStr) return '';

        const [hours, minutes] = timeStr.split(':');
        const hour = parseInt(hours, 10);
        const ampm = hour >= 12 ? 'PM' : 'AM';
        const hour12 = hour % 12 || 12;

        return `${hour12}:${minutes} ${ampm}`;
      }

      // Update the combined value and display when either input changes
      function updateDateTime() {
        const date = datePicker.value;
        const time = timePicker.value;

        if (date && time) {
          combinedInput.value = `${date} ${time}`;
          selectedDateDisplay.textContent = formatDisplayDate(date, time);
          selectedDateContainer.classList.remove('d-none');

          // Add visual confirmation
          datePicker.classList.add('is-valid');
          timePicker.classList.add('is-valid');
        } else {
          combinedInput.value = '';
          selectedDateContainer.classList.add('d-none');
        }
      }

      // Add event listeners
      datePicker.addEventListener('change', updateDateTime);
      timePicker.addEventListener('change', updateDateTime);

      // Add form validation
      const bookingForm = document.getElementById('bookingForm');
      if (bookingForm) {
        bookingForm.addEventListener('submit', function (e) {
          // Date/time validation
          if (!combinedInput.value) {
            e.preventDefault();
            datePicker.classList.add('is-invalid');
            timePicker.classList.add('is-invalid');

            // Show error for date time section
            let isValid = false;
          } else {
            datePicker.classList.remove('is-invalid');
            timePicker.classList.remove('is-invalid');
            datePicker.classList.add('is-valid');
            timePicker.classList.add('is-valid');
          }

          // Location validation
          const addressInput = document.getElementById('detailed-address');
          const latitude = document.getElementById('latitude');
          const longitude = document.getElementById('longitude');

          if (!addressInput.value.trim()) {
            e.preventDefault();
            addressInput.classList.add('is-invalid');
            isValid = false;
          } else {
            addressInput.classList.remove('is-invalid');
            addressInput.classList.add('is-valid');
          }

          if (!latitude.value || !longitude.value) {
            e.preventDefault();
            document.getElementById('address-input').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('address-input').classList.remove('is-invalid');
            document.getElementById('address-input').classList.add('is-valid');
          }

          if (!isValid) {
            // Show error message
            const errorAlert = document.createElement('div');
            errorAlert.className = 'alert alert-danger mb-3';
            errorAlert.innerHTML = '<i class="fas fa-exclamation-circle me-2"></i>Please fill in all required fields';

            const submitBtn = document.querySelector('button[type="submit"]');
            submitBtn.parentNode.insertBefore(errorAlert, submitBtn);

            // Remove after 5 seconds
            setTimeout(() => {
              errorAlert.remove();
            }, 5000);
          }
        });
      }
    });
  </script>

  <script>
    // Address selection handling
    document.addEventListener('DOMContentLoaded', function () {
      const addressSelect = document.getElementById('address-select');
      if (!addressSelect) return;

      const newAddressSection = document.getElementById('new-address-section');
      const mapSection = document.getElementById('map-section');
      const detailedAddressInput = document.getElementById('detailed-address');

      // Add hidden inputs for coordinates if not already present
      let latitudeInput = document.getElementById('latitude');
      let longitudeInput = document.getElementById('longitude');

      if (!latitudeInput) {
        latitudeInput = document.createElement('input');
        latitudeInput.type = 'hidden';
        latitudeInput.id = 'latitude';
        latitudeInput.name = 'latitude';
        document.getElementById('bookingForm').appendChild(latitudeInput);
      }

      if (!longitudeInput) {
        longitudeInput = document.createElement('input');
        longitudeInput.type = 'hidden';
        longitudeInput.id = 'longitude';
        longitudeInput.name = 'longitude';
        document.getElementById('bookingForm').appendChild(longitudeInput);
      }

      // Store the addresses data properly
      // Fix the JSON syntax error by using a hidden div to store the data
      const addressesData = JSON.parse(document.getElementById('addresses-data').textContent || '[]');

      // Populate hidden fields with saved address data
      addressSelect.addEventListener('change', function () {
        const selectedValue = this.value;

        if (selectedValue === 'new') {
          // Show map for new address
          if (newAddressSection) newAddressSection.classList.remove('d-none');
          mapSection.classList.remove('d-none');
          detailedAddressInput.value = '';

          // Clear hidden coordinates
          latitudeInput.value = '';
          longitudeInput.value = '';
        } else if (selectedValue !== '') {
          // Using saved address
          if (newAddressSection) newAddressSection.classList.add('d-none');
          mapSection.classList.add('d-none');

          // Get the selected address data
          const addressIndex = parseInt(selectedValue);

          if (addressesData[addressIndex]) {
            const address = addressesData[addressIndex];
            detailedAddressInput.value = `${address.street}, ${address.city}, ${address.state} - ${address.pincode}`;

            // Set coordinates if available
            if (address.coordinates) {
              latitudeInput.value = address.coordinates.latitude;
              longitudeInput.value = address.coordinates.longitude;
            }
          }
        }
      });

      // Trigger change event to initialize state based on default selection
      addressSelect.dispatchEvent(new Event('change'));
    });
  </script>